// This file is auto-generated by @hey-api/openapi-ts

import type { LoginTestTokenResponse, UsersReadUsersResponse, UsersCreateUserResponse, UsersReadUserMeResponse, UsersUpdateUserMeResponse, UsersRegisterUserResponse, UsersReadUserByIdResponse, UsersUpdateUserResponse, PrivateCreateUserResponse, ProjectsGetLineItemsResponse, ProjectsGetSampleByIndexResponse } from './types.gen';

const userPublicSchemaResponseTransformer = (data: any) => {
    if (data.last_login_time) {
        data.last_login_time = new Date(data.last_login_time);
    }
    return data;
};

export const loginTestTokenResponseTransformer = async (data: any): Promise<LoginTestTokenResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

const usersPublicSchemaResponseTransformer = (data: any) => {
    data.data = data.data.map((item: any) => {
        return userPublicSchemaResponseTransformer(item);
    });
    return data;
};

export const usersReadUsersResponseTransformer = async (data: any): Promise<UsersReadUsersResponse> => {
    data = usersPublicSchemaResponseTransformer(data);
    return data;
};

export const usersCreateUserResponseTransformer = async (data: any): Promise<UsersCreateUserResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

export const usersReadUserMeResponseTransformer = async (data: any): Promise<UsersReadUserMeResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

export const usersUpdateUserMeResponseTransformer = async (data: any): Promise<UsersUpdateUserMeResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

export const usersRegisterUserResponseTransformer = async (data: any): Promise<UsersRegisterUserResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

export const usersReadUserByIdResponseTransformer = async (data: any): Promise<UsersReadUserByIdResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

export const usersUpdateUserResponseTransformer = async (data: any): Promise<UsersUpdateUserResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

export const privateCreateUserResponseTransformer = async (data: any): Promise<PrivateCreateUserResponse> => {
    data = userPublicSchemaResponseTransformer(data);
    return data;
};

const lineItemMessageReadSchemaResponseTransformer = (data: any) => {
    if (data.created_at) {
        data.created_at = new Date(data.created_at);
    }
    if (data.updated_at) {
        data.updated_at = new Date(data.updated_at);
    }
    return data;
};

const lineItemReadSchemaResponseTransformer = (data: any) => {
    if (data.line_messages) {
        data.line_messages = data.line_messages.map((item: any) => {
            return lineItemMessageReadSchemaResponseTransformer(item);
        });
    }
    if (data.created_at) {
        data.created_at = new Date(data.created_at);
    }
    if (data.updated_at) {
        data.updated_at = new Date(data.updated_at);
    }
    return data;
};

const lineItemsPublicSchemaResponseTransformer = (data: any) => {
    data.data = data.data.map((item: any) => {
        return lineItemReadSchemaResponseTransformer(item);
    });
    return data;
};

export const projectsGetLineItemsResponseTransformer = async (data: any): Promise<ProjectsGetLineItemsResponse> => {
    data = lineItemsPublicSchemaResponseTransformer(data);
    return data;
};

export const projectsGetSampleByIndexResponseTransformer = async (data: any): Promise<ProjectsGetSampleByIndexResponse> => {
    data = lineItemReadSchemaResponseTransformer(data);
    return data;
};