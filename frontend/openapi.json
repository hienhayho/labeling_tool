{
  "openapi": "3.1.0",
  "info": { "title": "Labelling Tool", "version": "0.1.0" },
  "paths": {
    "/api/v1/google/login": {
      "get": {
        "tags": ["google"],
        "summary": "Google Login",
        "description": "Initiate Google OAuth login flow with CSRF protection",
        "operationId": "google-google_login",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/v1/google/callback": {
      "get": {
        "tags": ["google"],
        "summary": "Google Callback",
        "description": "Handle Google OAuth callback with enhanced security validation",
        "operationId": "google-google_callback",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/access-token": {
      "post": {
        "tags": ["login"],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login-login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": ["login"],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "login-test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": ["users"],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "users-read_users",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "users-create_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "users-read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete User Me",
        "description": "Delete own user.",
        "operationId": "users-delete_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "users-update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/me/password": {
      "patch": {
        "tags": ["users"],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "users-update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "tags": ["users"],
        "summary": "Register User",
        "description": "Create new user without the need to be logged in.",
        "operationId": "users-register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "users-read_user_by_id",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "users-update_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "users-delete_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/test-email/": {
      "post": {
        "tags": ["utils", "utils"],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "utils-test_email",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "email_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email To"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/utils/health-check/": {
      "get": {
        "tags": ["utils", "utils"],
        "summary": "Health Check",
        "operationId": "utils-health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Utils-Health Check"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/private/users/": {
      "post": {
        "tags": ["private"],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "private-create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateUserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Own Projects",
        "description": "Get projects owned by the current user.",
        "operationId": "projects-get_own_projects",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPublic"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects"],
        "summary": "Create Project",
        "description": "Create a new project.",
        "operationId": "projects-create_project",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}": {
      "delete": {
        "tags": ["projects"],
        "summary": "Delete Project",
        "description": "Delete a project by ID.",
        "operationId": "projects-delete_project",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/dashboard": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Dashboard Data",
        "description": "Get dashboard statistics for all projects.",
        "operationId": "projects-get_dashboard",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDashboard"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/download": {
      "post": {
        "tags": ["projects"],
        "summary": "Download Project",
        "description": "Download project data as JSONL file.",
        "operationId": "projects-download_project",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDownloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/status": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Project Status",
        "description": "Get the status of a specific project.",
        "operationId": "projects-get_project_status",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatus"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/samples": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Line Items",
        "description": "Get line items from a project with pagination and filtering.",
        "operationId": "projects-get_line_items",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["UNLABELED", "CONFIRMED", "APPROVED", "REJECTED"],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemsPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/samples/{sample_idx}": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Sample by Index",
        "description": "Get a specific sample by index from a project.",
        "operationId": "projects-get_sample_by_index",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "sample_idx",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sample Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemRead"
                }
              }
            }
          },
          "404": {
            "description": "Sample not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/assign": {
      "post": {
        "tags": ["projects"],
        "summary": "Assign Task",
        "description": "Assign task to a user for a project.",
        "operationId": "projects-assign_task",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/confirm/{line_item_id}": {
      "post": {
        "tags": ["projects"],
        "summary": "Confirm Line Item",
        "description": "Confirm a line item with user feedback.",
        "operationId": "projects-confirm_line_item",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "line_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Line Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemConfirmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login-login_access_token"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Message": {
        "properties": {
          "message": { "type": "string", "title": "Message" }
        },
        "type": "object",
        "required": ["message"],
        "title": "Message"
      },
      "PrivateUserCreate": {
        "properties": {
          "email": { "type": "string", "title": "Email" },
          "password": { "type": "string", "title": "Password" },
          "full_name": { "type": "string", "title": "Full Name" },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          }
        },
        "type": "object",
        "required": ["email", "password", "full_name"],
        "title": "PrivateUserCreate"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "is_first_login": {
            "type": "boolean",
            "title": "Is First Login",
            "default": false
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "default": 3600
          }
        },
        "type": "object",
        "required": ["access_token"],
        "title": "Token"
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": ["current_password", "new_password"],
        "title": "UpdatePassword"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Avatar Url"
          },
          "last_login_time": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Login Time"
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserCreate"
      },
      "UserConversation": {
        "properties": {
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "topic": { "type": "string", "title": "Topic" },
          "title": { "type": "string", "title": "Title" }
        },
        "type": "object",
        "required": ["id", "user_id", "topic", "title"],
        "title": "UserConversation"
      },
      "UserPublic": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Avatar Url"
          },
          "last_login_time": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Login Time"
          },
          "id": { "type": "integer", "title": "Id" },
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserConversation"
            },
            "title": "Conversations"
          }
        },
        "type": "object",
        "required": ["email", "id"],
        "title": "UserPublic"
      },
      "UserRegister": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserRegister"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Avatar Url"
          },
          "last_login_time": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Login Time"
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 8
              },
              { "type": "null" }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              { "type": "null" }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "UserUpdateMe"
      },
      "UsersPublic": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/UserPublic" },
            "type": "array",
            "title": "Data"
          },
          "count": { "type": "integer", "title": "Count" }
        },
        "type": "object",
        "required": ["data", "count"],
        "title": "UsersPublic"
      },
      "ProjectPublic": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Description"
          },
          "url": {
            "type": "string",
            "maxLength": 255,
            "title": "Url"
          },
          "owner_id": { "type": "integer", "title": "Owner Id" }
        },
        "type": "object",
        "required": ["id", "name", "url", "owner_id"],
        "title": "ProjectPublic"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Description"
          },
          "url": {
            "type": "string",
            "maxLength": 255,
            "title": "Url"
          }
        },
        "type": "object",
        "required": ["name", "url"],
        "title": "ProjectCreate"
      },
      "ProjectStatus": {
        "properties": {
          "state": {
            "type": "string",
            "title": "State"
          },
          "info": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Info"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "num_samples": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Samples"
          },
          "num_task_assigned": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Task Assigned"
          },
          "num_task_not_assigned": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Task Not Assigned"
          },
          "user_task_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTaskSummary"
            },
            "title": "User Task Summary"
          }
        },
        "type": "object",
        "required": ["state"],
        "title": "ProjectStatus"
      },
      "AssignTaskRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "num_samples": {
            "type": "integer",
            "minimum": 1,
            "title": "Num Samples"
          }
        },
        "type": "object",
        "required": ["user_id", "num_samples"],
        "title": "AssignTaskRequest"
      },
      "LineItemMessageConfirmRequest": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["id", "role", "content"],
        "title": "LineItemMessageConfirmRequest"
      },
      "LineItemConfirmRequest": {
        "properties": {
          "line_messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemMessageConfirmRequest"
            },
            "title": "Line Messages"
          },
          "tools": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              { "type": "null" }
            ],
            "title": "Tools"
          },
          "feedback": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Feedback"
          },
          "status": {
            "type": "string",
            "enum": ["UNLABELED", "CONFIRMED", "APPROVED", "REJECTED"],
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["line_messages", "status"],
        "title": "LineItemConfirmRequest"
      },
      "LineItemMessageRead": {
        "properties": {
          "line_message_index": {
            "type": "integer",
            "title": "Line Message Index"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "feedback": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Feedback"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["line_message_index", "role", "content", "id"],
        "title": "LineItemMessageRead"
      },
      "LineItemRead": {
        "properties": {
          "tools": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "title": "Tools"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "line_index": {
            "type": "integer",
            "title": "Line Index"
          },
          "feedback": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Feedback"
          },
          "line_messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemMessageRead"
            },
            "title": "Line Messages"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["UNLABELED", "CONFIRMED", "APPROVED", "REJECTED"]
              },
              { "type": "null" }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["tools", "id", "project_id", "line_index"],
        "title": "LineItemRead"
      },
      "LineItemsPublic": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemRead"
            },
            "title": "Data"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "num_pages": {
            "type": "integer",
            "title": "Num Pages"
          },
          "status_counts": {
            "type": "object",
            "properties": {
              "UNLABELED": {
                "type": "integer",
                "title": "Unlabeled Count"
              },
              "CONFIRMED": {
                "type": "integer",
                "title": "Confirmed Count"
              },
              "APPROVED": {
                "type": "integer",
                "title": "Approved Count"
              },
              "REJECTED": {
                "type": "integer",
                "title": "Rejected Count"
              }
            },
            "title": "Status Counts"
          }
        },
        "type": "object",
        "required": ["data", "total_count", "num_pages"],
        "title": "LineItemsPublic"
      },
      "UserTaskSummary": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "task_count": {
            "type": "integer",
            "title": "Task Count"
          },
          "confirmed": {
            "type": "integer",
            "title": "Confirmed"
          },
          "unlabeled": {
            "type": "integer",
            "title": "Unlabeled"
          },
          "approved": {
            "type": "integer",
            "title": "Approved"
          },
          "rejected": {
            "type": "integer",
            "title": "Rejected"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "full_name",
          "email",
          "task_count",
          "confirmed",
          "unlabeled",
          "approved",
          "rejected"
        ],
        "title": "UserTaskSummary"
      },
      "ProjectDashboard": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "project_description": {
            "type": "string",
            "title": "Project Description"
          },
          "num_samples": {
            "type": "integer",
            "title": "Num Samples"
          },
          "user_task_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTaskSummary"
            },
            "title": "User Task Summary"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "project_name",
          "project_description",
          "num_samples",
          "user_task_summary"
        ],
        "title": "ProjectDashboard"
      },
      "ProjectDownloadRequest": {
        "properties": {
          "limit": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Limit"
          },
          "include_statuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["UNLABELED", "CONFIRMED", "APPROVED", "REJECTED"]
            },
            "title": "Include Statuses"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          }
        },
        "type": "object",
        "required": ["file_name"],
        "title": "ProjectDownloadRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}
